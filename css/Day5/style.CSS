*{
    margin: 0;
    padding: 0;
    box-sizing: border-box;
}

/* div{
    background-color: deeppink;
     display: inline;
    width: 400px;
    height: 20px;
    display: none;
    visibility: hidden; 
} */

/* we can apply height and with to block level element but we cannot the same to linline elemnt */
/* Display will remove the element from the viewport and it want accupy any space an document but visibility will accupy the space and make the element invisible */

/* span{
    background-color: lightslategrey;
    display: block;
    width: 400px;
    height: 30px;
    display: inline-block;
    display: hidden; 
} */

/* flexbox layout is way to arrange element in either X-axis or Y-axis, meaning provide the space between the element and arrange in one dimensional model */
/* display:-inline-flex and flex */

.parent{
    background-color: goldenrod;
    width: 90%;
    height: 90vh;
    margin: auto;
    
    border: 2px solid black;
    display: flex;
    /* flex-direction: row-reverse, row, column, column-reverse; */
    flex-direction: column;
    /* justify-content: space-around,space-between,space-evenly,end,center, start(defult); */
    justify-content: space-evenly;
    align-items: center;
    /* flex-wrap: nowrap,wrap,wrap-reverse; */
    flex-wrap: wrap;

}

.items{
    background-color: aqua;
    width: 70px;
    height: 50px;
    border: 1px solid black;
}

.item1{
    align-self:flex-end ;
}

.item2{
    align-self: flex-start;
}
.item3{
    align-self: flex-end;

}
.item6{
    align-self: flex-start;
}
.item4{
    flex-grow:1;
}
.item5{
    /* flex-grow: 9; */
    flex-shrink: 1;
}